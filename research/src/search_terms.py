"""
M√≥dulo de termos de busca baseado no notebook original.
Gera 6 √ó 22 = 132 combina√ß√µes.
"""

import itertools
from typing import List

# Termos prim√°rios do notebook original
FIRST_TERMS = ['mathematics education', 'ensino de matem√°tica', 'math learning', 'aprendizagem matem√°tica', 'mathematics teaching', 'educa√ß√£o matem√°tica']

# Termos secund√°rios do notebook original  
SECOND_TERMS = ['adaptive learning', 'aprendizagem adaptativa', 'personalized learning', 'aprendizagem personalizada', 'intelligent tutoring systems', 'sistemas de tutoria inteligente', 'learning analytics', 'an√°lise de aprendizagem', 'educational data mining', 'minera√ß√£o de dados educacionais', 'machine learning', 'aprendizado de m√°quina', 'artificial intelligence', 'intelig√™ncia artificial', 'automated assessment', 'avalia√ß√£o automatizada', 'competency identification', 'identifica√ß√£o de compet√™ncias', 'student modeling', 'modelagem de estudantes', 'predictive analytics', 'an√°lise preditiva']

def queries_generator(first: List[str], second: List[str]) -> List[str]:
    """
    Generate all combinations of primary and secondary terms for searching in databases.
    Baseado na fun√ß√£o do notebook original.
    
    Args:
        first (list): List the first terms.
        second (list): List the second terms.
        
    Returns:
        list: List string with all combinations of terms.
    """
    # Gera combina√ß√µes de termos prim√°rios e secund√°rios
    queries = [
        f'{p} AND {s}'
        for p, s in itertools.product(first, second)
    ]

    print(f"üìù Geradas {len(queries)} combina√ß√µes de termos de busca")

    return queries

def get_all_queries() -> List[str]:
    """
    Retorna todas as combina√ß√µes de termos de busca.
    """
    return queries_generator(FIRST_TERMS, SECOND_TERMS)

if __name__ == "__main__":
    queries = get_all_queries()
    print(f"Total de combina√ß√µes: {len(queries)}")
    print("Primeiras 5 combina√ß√µes:")
    for i, query in enumerate(queries[:5]):
        print(f"  {i+1}. {query}")
