name: Deploy Reports to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate exports exist
        run: |
          echo "üîç Validating pre-generated reports..."
          
          # Check required directories
          if [ ! -d "research/exports/reports" ]; then
            echo "‚ùå ERROR: research/exports/reports/ not found"
            echo "Run: python -m research.src.cli export"
            exit 1
          fi
          
          if [ ! -d "research/exports/visualizations" ]; then
            echo "‚ùå ERROR: research/exports/visualizations/ not found"
            echo "Run: python -m research.src.cli export"
            exit 1
          fi
          
          # Check required files (sem timestamps)
          REQUIRED_FILES=(
            "research/exports/reports/index.html"
            "research/exports/reports/summary_report.html"
            "research/exports/reports/papers_report_included.html"
            "research/exports/reports/gap_analysis.html"
          )
          
          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -f "$file" ]; then
              echo "‚ùå ERROR: $file not found"
              echo "Run: python -m research.src.cli export"
              exit 1
            fi
            echo "‚úÖ Found: $file"
          done
          
          # Validate visualizations
          VIZ_COUNT=$(ls -1 research/exports/visualizations/*.png 2>/dev/null | wc -l)
          if [ "$VIZ_COUNT" -lt 6 ]; then
            echo "‚ö†Ô∏è WARNING: Expected 6 visualizations, found $VIZ_COUNT"
          else
            echo "‚úÖ Found $VIZ_COUNT visualization(s)"
          fi
      
      - name: Prepare Pages content
        run: |
          echo "üì¶ Preparing content for GitHub Pages..."
          mkdir -p _site
          
          # Copy reports (usar index.html existente)
          cp research/exports/reports/index.html _site/index.html
          cp research/exports/reports/summary_report.html _site/summary.html
          cp research/exports/reports/papers_report_included.html _site/papers.html
          cp research/exports/reports/gap_analysis.html _site/gap-analysis.html
          
          # Copy visualizations
          mkdir -p _site/visualizations
          cp research/exports/visualizations/*.png _site/visualizations/
          
          # Create .nojekyll to bypass Jekyll processing
          touch _site/.nojekyll
          
          # Summary
          echo ""
          echo "ÔøΩ Site structure:"
          ls -lh _site/
          echo ""
          echo "ÔøΩ Visualizations:"
          ls -lh _site/visualizations/
          echo ""
          echo "‚úÖ Site prepared successfully"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
  
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
