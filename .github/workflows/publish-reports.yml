name: Publish Reports to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permite execu√ß√£o manual

permissions:
  contents: read
  pages: write
  id-token: write

# Evita execu√ß√µes concorrentes do mesmo workflow
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  generate-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      # Note: Reports and visualizations are pre-generated and versioned
      # No need to install Python or regenerate on each deployment
      
      - name: Prepare Pages content
        run: |
          mkdir -p docs
          
          # Verificar se exports existem
          if [ ! -d "research/exports/reports" ] || [ ! -d "research/exports/visualizations" ]; then
            echo "‚ö†Ô∏è Warning: Pre-generated reports not found!"
            echo "Run 'python -m research.src.cli export' locally and commit the results."
          fi
          
          # Copiar relat√≥rios HTML mais recentes
          if [ -d "research/exports/reports" ]; then
            # Encontrar arquivos mais recentes
            SUMMARY=$(ls -t research/exports/reports/summary_report_*.html 2>/dev/null | head -1)
            PAPERS=$(ls -t research/exports/reports/papers_report_included_*.html 2>/dev/null | head -1)
            GAP=$(ls -t research/exports/reports/gap_analysis_*.html 2>/dev/null | head -1)
            
            # Copiar com nomes fixos
            [ -f "$SUMMARY" ] && cp "$SUMMARY" docs/index.html
            [ -f "$PAPERS" ] && cp "$PAPERS" docs/papers.html
            [ -f "$GAP" ] && cp "$GAP" docs/gap-analysis.html
          fi
          
          # Copiar visualiza√ß√µes
          if [ -d "research/exports/visualizations" ]; then
            mkdir -p docs/visualizations
            cp research/exports/visualizations/*.png docs/visualizations/ 2>/dev/null || true
            echo "‚úÖ Copied visualizations:"
            ls -lh docs/visualizations/
          fi
          
          # Criar .nojekyll para evitar processamento Jekyll
          touch docs/.nojekyll
          
          # Validar que index.html existe
          if [ ! -f "docs/index.html" ]; then
            echo "‚ö†Ô∏è Error: No summary report found to use as index.html"
            echo "Please run 'python -m research.src.cli export' locally and commit the results."
            exit 1
          fi
          
          # Debug: listar estrutura final
          echo "üìÅ Final docs structure:"
          ls -lh docs/
          echo ""
          echo "üìÅ Visualizations:"
          ls -lh docs/visualizations/ || echo "No visualizations folder"
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'docs'
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
